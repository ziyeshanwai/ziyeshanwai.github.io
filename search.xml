<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>写博客的意义</title>
      <link href="2020/10/05/%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%84%8F%E4%B9%89/"/>
      <url>2020/10/05/%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%84%8F%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<h1 id="写博客的意义"><a href="#写博客的意义" class="headerlink" title="写博客的意义"></a>写博客的意义</h1><ul><li>最近假期，不知道做些什么，胡思乱想了很多，我在想自己到底喜欢做什么，是打游戏还是看电影听音乐还是旅行或者养花种草，我发现这些东西都不能带来内心的平静，或者说我从中得不到治愈。  </li></ul><ul><li><p>毕业一年有余，我慢慢感受到了社会和学校的巨大的不同，学校里靠才华，社会里更看物质。我以前还傻傻的想赚钱很容易，只要努力就可以成为比尔盖茨那样的首富，当看见自己每月的工资时，现实给了我很真实的一击，按照目前的财富积累速度，这一生赚个七八百万就是上限了。所以不能再按照目前的状态继续下去了。要做出改变。  </p></li><li><p>不知道为什么，当我自己写一些东西后，会觉得心里很舒服，似乎在和另一个世界的某个人在交流互动，我希望在博客里写日记一般的记录自己的生活，也许有一天会发现这些记录的东西是自己一生的财富。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>use hexo create a blog</title>
      <link href="2020/10/05/use-hexo-create-a-blog/"/>
      <url>2020/10/05/use-hexo-create-a-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="1-博客环境搭建"><a href="#1-博客环境搭建" class="headerlink" title="1. 博客环境搭建"></a>1. 博客环境搭建</h2><h3 id="1-1-安装Git与node-js"><a href="#1-1-安装Git与node-js" class="headerlink" title="1.1 安装Git与node.js"></a>1.1 安装Git与node.js</h3><ul><li>Windows平台到<a href="https://git-scm.com/download%E4%B8%8B%E8%BD%BD">官网</a> 下载Git，一路默认选项安装。  </li><li>到<a href="https://nodejs.org/en/download/">官网</a>下载 Node.js，一路默认选项安装  <h3 id="1-2-github创建仓库"><a href="#1-2-github创建仓库" class="headerlink" title="1.2 github创建仓库"></a>1.2 github创建仓库</h3>参考<a href="https://www.zhihu.com/question/59088760">如何用github page搭建博客</a>创建个参考并clone到本地</li></ul><h3 id="1-3-安装并初始化Hexo"><a href="#1-3-安装并初始化Hexo" class="headerlink" title="1.3 安装并初始化Hexo"></a>1.3 安装并初始化Hexo</h3><p>  Git 和 Node.js 都安装好后,首先在本地仓库创建一个用于存放博客文件的文件夹，如 blog，然后进入 blog 文件夹，下面开始安装并使用 Hexo<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli  </span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><br>  安装完成后，指定文件夹的目录如下：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><br>其中_config.yml文件用于存放网站的配置信息，可以在此配置大部分的参数；scaffolds是存放模板的文件夹，当新建文章时，Hexo会根据scaffold来建立文件；source是资源文件夹，用于存放用户资源，themes是主题文件夹，存放博客主题，Hexo 会根据主题来生成静态页面。</p><h2 id="2-创建博客"><a href="#2-创建博客" class="headerlink" title="2. 创建博客"></a>2. 创建博客</h2><h3 id="2-1-创建博客"><a href="#2-1-创建博客" class="headerlink" title="2.1 创建博客"></a>2.1 创建博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>该post生成在source_posts中，使用markdown语言编辑该博客，编辑完成后进入2.2</p><h3 id="2-2-产生静态文件"><a href="#2-2-产生静态文件" class="headerlink" title="2.2 产生静态文件"></a>2.2 产生静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate or hexo g</span><br></pre></td></tr></table></figure><h3 id="2-3-运行服务器测试效果"><a href="#2-3-运行服务器测试效果" class="headerlink" title="2.3 运行服务器测试效果"></a>2.3 运行服务器测试效果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server or hexo s</span><br></pre></td></tr></table></figure><p>Hexo将source文件夹中的Markdown 和 HTML 文件会被解析并放到public文件夹中，public文件夹用于存放静态博客文件，相当于网站根目录。<br>至此博客雏形基本完成，在浏览器中访问<a href="">http://localhost:4000/</a>,<br>如果博客内容有问题返回至2.1，调整效果至没有问题，提交代码即可  </p><h3 id="2-4-部署提交代码"><a href="#2-4-部署提交代码" class="headerlink" title="2.4 部署提交代码"></a>2.4 部署提交代码</h3><p>该步骤需要首先创建github的仓库, 通常为username.github.io，然后进入settings的github pages,随便选择theme, 把branch选择为master这些工作提前做好</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy or hexo d</span><br></pre></td></tr></table></figure><h2 id="3-使用next主题"><a href="#3-使用next主题" class="headerlink" title="3. 使用next主题"></a>3. 使用next主题</h2><h3 id="3-1-下载next主题"><a href="#3-1-下载next主题" class="headerlink" title="3.1 下载next主题"></a>3.1 下载next主题</h3><p>在Git Bash终端执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>解压所下载的压缩包至站点的 themes 目录下， 并将解压后的文件夹名称更改为 next, 如下图所示<br><img src="../imgs/theme.png"></p><h3 id="3-2-启用next主题"><a href="#3-2-启用next主题" class="headerlink" title="3.2 启用next主题"></a>3.2 启用next主题</h3><p>打开站点配置文件 _config.yml，找到 theme 字段，并将其值有landscape更改为 next<br>在Git Bash终端执行命令hexo s，在浏览器中访问<a href="http://localhost:4000/,%E5%8D%B3%E5%8F%AF%E9%A2%84%E8%A7%88%E4%B8%BB%E9%A2%98">http://localhost:4000/,即可预览主题</a>.</p><h3 id="3-3-更换next主题"><a href="#3-3-更换next主题" class="headerlink" title="3.3 更换next主题"></a>3.3 更换next主题</h3><p>修改主题配置文件 _config.yml的 Schemes 字段的值，该_config.yml位于next的文件夹下，next 共提供了Muse、Mist、Pisces、Gemini.Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。</p><h3 id="3-4-NexT主题配置"><a href="#3-4-NexT主题配置" class="headerlink" title="3.4  NexT主题配置"></a>3.4  NexT主题配置</h3><p>参照<a href="http://theme-next.iissnan.com/getting-started.html#theme-settings">NexT使用文档</a>，设置界面语言、菜单、侧栏、头像、作者昵称和站点描述。</p>]]></content>
      
      
      <categories>
          
          <category> 实用技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技能 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
